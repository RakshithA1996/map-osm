{"ast":null,"code":"var _jsxFileName = \"/home/rakshith/Git Projects/map-osm/src/components/NavBar.jsx\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moon from \"../images/moon.png\";\nimport sun from \"../images/sun.png\";\nimport setDark from \"../redux/actions/setDark\";\n\nclass NavBar extends Component {\n  constructor() {\n    super();\n\n    this.setColorMode = mode => {\n      if (mode) {\n        this.props.setMode(\"IS_LIGHT\");\n      } else {\n        this.props.setMode(\"IS_DARK\");\n      }\n    };\n\n    this.state = {\n      sidebarData: [{\n        href: \"#home\",\n        class: \"fa fa-fw fa-home\",\n        label: \"Home\"\n      }, {\n        href: \"#services\",\n        class: \"fa fa-fw fa-wrench\",\n        label: \"Services\"\n      }, {\n        href: \"#clients\",\n        class: \"fa fa-fw fa-user\",\n        label: \"Clients\"\n      }, {\n        href: \"#contact\",\n        class: \"fa fa-fw fa-envelope\",\n        label: \"Contact\"\n      }]\n    };\n  }\n\n  render() {\n    const {\n      sidebarData\n    } = this.state;\n    const {\n      mode\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"NavBar\",\n      style: mode ? {\n        background: \"#5e5e5e\"\n      } : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"NavBar__Para\",\n      style: mode ? {\n        color: \"#f5b000\"\n      } : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"NavBar__DarkMode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"NavBar__DarkMode--Para\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"NavBar__DarkMode--Para__Img\",\n      src: mode ? sun : moon,\n      alt: \"mode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, mode ? \"Light\" : \"Dark\", \" Mode\")), /*#__PURE__*/React.createElement(\"label\", {\n      class: \"switch\",\n      for: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"checkbox\",\n      onChange: () => this.setColorMode(mode),\n      checked: mode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"slider round\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"NavBar__Sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, sidebarData.map((data, index) => {\n      return /*#__PURE__*/React.createElement(\"a\", {\n        key: index,\n        className: \"NavBar__Sidebar--Para\",\n        href: data.href,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        id: \"iconFA\",\n        className: data.class,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 95\n        }\n      }), \" \", data.label);\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    mode: state.dark.mode\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setMode: data => dispatch(setDark(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","map":{"version":3,"sources":["/home/rakshith/Git Projects/map-osm/src/components/NavBar.jsx"],"names":["React","Component","connect","moon","sun","setDark","NavBar","constructor","setColorMode","mode","props","setMode","state","sidebarData","href","class","label","render","background","color","map","data","index","mapStateToProps","dark","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moon from \"../images/moon.png\";\nimport sun from \"../images/sun.png\";\nimport setDark from \"../redux/actions/setDark\";\n\nclass NavBar extends Component {\n    constructor(){\n        super();\n        this.state = {\n            sidebarData : [\n                {\n                    href:\"#home\",\n                    class:\"fa fa-fw fa-home\",\n                    label:\"Home\"\n                },\n                {\n                    href:\"#services\",\n                    class:\"fa fa-fw fa-wrench\",\n                    label:\"Services\"\n                },\n                {\n                    href:\"#clients\",\n                    class:\"fa fa-fw fa-user\",\n                    label:\"Clients\"\n                },\n                {\n                    href:\"#contact\",\n                    class:\"fa fa-fw fa-envelope\",\n                    label:\"Contact\"\n                },\n            ]\n        }\n    }\n\n    setColorMode = (mode) => {\n        if(mode){\n            this.props.setMode(\"IS_LIGHT\")\n        }else{\n            this.props.setMode(\"IS_DARK\")\n        }\n    }\n\n    render(){\n        const {sidebarData} = this.state;\n        const {mode} = this.props;\n        return(\n            <div className=\"NavBar\" style={mode?{background:\"#5e5e5e\"}:{}}>\n                <div className=\"NavBar__Para\" style={mode?{color:\"#f5b000\"}:{}} >Dashboard</div>\n                <div className=\"NavBar__DarkMode\">\n                    <div className=\"NavBar__DarkMode--Para\">\n                        <img className=\"NavBar__DarkMode--Para__Img\" src={mode?sun:moon} alt=\"mode\"></img>\n                        <span>{mode?\"Light\":\"Dark\"} Mode</span>\n                    </div>\n                    <label class=\"switch\" for=\"checkbox\">\n                        <input type=\"checkbox\" id=\"checkbox\" onChange={()=>this.setColorMode(mode)} checked={mode} />\n                        <div class=\"slider round\"></div>\n                    </label>\n                </div>\n                <div className=\"NavBar__Sidebar\">\n                    {sidebarData.map((data,index)=>{\n                        return (\n                            <a key={index} className=\"NavBar__Sidebar--Para\" href={data.href}><i id=\"iconFA\" className={data.class}></i> {data.label}</a>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {mode:state.dark.mode};\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setMode : data => dispatch(setDark(data))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);"]},"metadata":{},"sourceType":"module"}