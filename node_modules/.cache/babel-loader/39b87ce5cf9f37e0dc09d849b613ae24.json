{"ast":null,"code":"var _jsxFileName = \"/home/rakshith/Git Projects/map-osm/src/components/Header.jsx\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport blackNav from \"../images/blackNav.svg\";\nimport whiteNav from \"../images/whiteNav.png\";\nimport setDark from \"../redux/actions/setDark\";\nimport setNav from \"../redux/actions/setNavbar\";\nimport setLogin from \"../redux/actions/setLogin\";\n\nclass Header extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setColorMode = mode => {\n      if (mode) {\n        this.props.setMode(\"IS_LIGHT\");\n      } else {\n        this.props.setMode(\"IS_DARK\");\n      }\n    };\n\n    this.setNav = nav => {\n      if (nav) {\n        this.props.toggleNav(\"IS_NAV_FALSE\");\n      } else {\n        this.props.toggleNav(\"IS_NAV_TRUE\");\n      }\n    };\n  }\n\n  render() {\n    const {\n      mode,\n      nav,\n      auth\n    } = this.props;\n    console.log(mode);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Header\",\n      style: mode ? {\n        background: \"#292929\"\n      } : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Header__Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"Header__Title--Img\",\n      onClick: () => this.setNav(nav),\n      src: mode ? whiteNav : blackNav,\n      alt: \"blackNav\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      contentEditable: true,\n      className: \"Header__Title--Para\",\n      style: mode ? {\n        color: \"#ffffff\"\n      } : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, \"React-OSM-Map\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"Header__Login\",\n      style: mode ? {\n        background: \"#5e5e5e\",\n        color: \"#f5b000\"\n      } : {},\n      onClick: () => {\n        if (auth) {\n          this.props.toggleLogout(auth);\n        } else {\n          this.props.toggleLogin();\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, auth ? \"Logout\" : \"Login\"));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    mode: state.dark.mode,\n    nav: state.navbar.nav,\n    auth: state.loginAuth.auth\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setMode: data => dispatch(setDark(data)),\n  toggleNav: data => dispatch(setNav(data)),\n  toggleAuth: data => dispatch(setLogin(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/home/rakshith/Git Projects/map-osm/src/components/Header.jsx"],"names":["React","Component","connect","whiteNav","setDark","setNav","setLogin","Header","setColorMode","mode","props","setMode","nav","toggleNav","render","auth","console","log","background","blackNav","color","toggleLogout","toggleLogin","mapStateToProps","state","dark","navbar","loginAuth","mapDispatchToProps","dispatch","data","toggleAuth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport blackNav from \"../images/blackNav.svg\";\nimport whiteNav from \"../images/whiteNav.png\";\nimport setDark from \"../redux/actions/setDark\";\nimport setNav from \"../redux/actions/setNavbar\";\nimport setLogin from \"../redux/actions/setLogin\";\n\nclass Header extends Component {\n\n    setColorMode = (mode) => {\n        if(mode){\n            this.props.setMode(\"IS_LIGHT\")\n        }else{\n            this.props.setMode(\"IS_DARK\")\n        }\n    }\n\n    setNav = (nav) => {\n        if(nav){\n            this.props.toggleNav(\"IS_NAV_FALSE\")\n        }else{\n            this.props.toggleNav(\"IS_NAV_TRUE\")\n        }\n    }\n\n    render(){\n        const {mode,nav,auth} = this.props;\n        console.log(mode);\n        return(\n            <div className=\"Header\" style={mode?{background:\"#292929\"}:{}}>\n                <div className=\"Header__Title\">\n                    <img \n                        className=\"Header__Title--Img\" \n                        onClick={()=>this.setNav(nav)} \n                        src={mode?whiteNav:blackNav} \n                        alt=\"blackNav\" \n                    />\n                    <span contentEditable={true} className=\"Header__Title--Para\" style={mode?{color:\"#ffffff\"}:{}}>React-OSM-Map</span>\n                </div>\n                {/* <div className=\"Header__Right\"> */}\n                    {/* <img className=\"Header__Right--Img\" onClick={()=>this.setColorMode(mode)} src={mode?light:dark} alt=\"darkLight\" /> */}\n                    <button \n                        className=\"Header__Login\" \n                        style={mode?{background:\"#5e5e5e\",color:\"#f5b000\"}:{}}\n                        onClick={()=>{\n                            if(auth){\n                                this.props.toggleLogout(auth)\n                            }else{\n                                this.props.toggleLogin()\n                            }\n                        }}\n                    >\n                        {auth?\"Logout\":\"Login\"}\n                    </button>\n                {/* </div> */}\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {mode:state.dark.mode,nav:state.navbar.nav,auth: state.loginAuth.auth};\n}\n\nconst mapDispatchToProps = dispatch => ({\n    setMode : data => dispatch(setDark(data)),\n    toggleNav : data => dispatch(setNav(data)),\n    toggleAuth : data => dispatch(setLogin(data)),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);"]},"metadata":{},"sourceType":"module"}